link to image: https://imgur.com/8bf8ihd


What are firewalls for:
Firewalls are added to control and manage network traffic to and from the servers. They act as a barrier between the servers and the external network, allowing only authorized and necessary communication to pass through. Each server has its own firewall to tailor access control based on the specific services it provides.

Why is the traffic served over HTTPS:
HTTPS (HTTP Secure) is used to encrypt the data transmitted between the user's browser and the web server.

What monitoring is used for:
Monitoring is used to keep track of the health, performance, and security of the infrastructure. It involves collecting metrics and logs to ensure everything is running as expected and to promptly detect and address any issues. 

How the monitoring tool is collecting data:
Monitoring tools collect data using agents or collectors installed on each server. These agents continuously gather information about various aspects of the server's performance, such as CPU usage, memory usage, disk activity, network traffic, and more. Log collectors aggregate logs generated by the server's applications, services, and the operating system. This data is sent to a centralized monitoring server for analysis, visualization, and alerting.

Explain what to do if you want to monitor your web server QPS:
If you want to monitor your web server's Queries Per Second (QPS), you can follow these steps:
Select a Monitoring Tool: Choose a monitoring tool capable of collecting web server metrics. For instance, Prometheus, Grafana, or Datadog.
Install Monitoring Agent: Install the appropriate monitoring agent on your web server. Configure it to collect metrics related to QPS.
Configure Metric Collection: Define metrics you want to collect, like request counts per second.
Visualize Data: Create a dashboard in your monitoring tool to display QPS metrics in real-time. This provides a clear view of your server's request load.
Set Alerts: Configure alerts based on QPS thresholds. If QPS exceeds or drops below a certain level, receive notifications to address potential issues.


** Issues with this Infrastructure:

Why terminating SSL at the load balancer level is an issue:
Terminating SSL at the load balancer means that decrypted traffic is forwarded to backend servers. If communication between the load balancer and backend servers is not secured, the data is vulnerable to interception within the internal network. Moreover, backend servers can't independently verify user connections, potentially leading to security risks.

Why having only one MySQL server capable of accepting writes is an issue:
A single write-capable MySQL server creates a single point of failure. If this server fails, write operations will be affected, potentially causing data inconsistency and downtime. Additionally, write-heavy workloads may overwhelm the server's resources, impacting performance and causing delays in data updates.

Why having servers with all the same components (database, web server and application server) might be a problem:
While consistency simplifies management, it can lead to resource contention. Different components have different resource requirements. For instance, a database server might need more memory and storage than a web server. Allocating the same resources to all components could lead to underutilization or insufficient resources for critical services.